openapi: 3.1.0
info:
  title: expresso-content-management
  version: 0.0.0
paths:
  "":
    get:
      operationId: Get
      summary: API home
      responses:
        "200":
          description: GET  Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      greetings:
                        type: string
                    required:
                      - greetings
                required:
                  - status
                  - data
        "400":
          description: GET  Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /auth/users/signup:
    post:
      operationId: PostAuthUsersSignup
      tags:
        - auth
      requestBody:
        description: POST /auth/users/signup Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  minLength: 4
                email:
                  type: string
                  format: email
                  minLength: 1
                password:
                  type: string
                  minLength: 4
                  maxLength: 30
              required:
                - fullName
                - email
                - password
      responses:
        "201":
          description: POST /auth/users/signup Positive response 201
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: created
                  data:
                    type: object
                    properties:
                      createdAt:
                        description: YYYY-MM-DDTHH:mm:ss.sssZ
                        type: string
                        format: date-time
                        externalDocs:
                          url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      externalId:
                        type: string
                        format: uuid
                      token:
                        type: string
                        minLength: 60
                    required:
                      - createdAt
                      - externalId
                      - token
                required:
                  - status
                  - data
        "202":
          description: POST /auth/users/signup Positive response 202
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: created
                  data:
                    type: object
                    properties:
                      createdAt:
                        description: YYYY-MM-DDTHH:mm:ss.sssZ
                        type: string
                        format: date-time
                        externalDocs:
                          url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                      externalId:
                        type: string
                        format: uuid
                      token:
                        type: string
                        minLength: 60
                    required:
                      - createdAt
                      - externalId
                      - token
                required:
                  - status
                  - data
        "400":
          description: POST /auth/users/signup Negative response 400
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  reason:
                    type: string
                required:
                  - status
                  - reason
        "409":
          description: POST /auth/users/signup Negative response 409
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: exists
                  id:
                    type: integer
                    format: int64
                    minimum: -9007199254740991
                    maximum: 9007199254740991
                required:
                  - status
                  - id
        "500":
          description: POST /auth/users/signup Negative response 500
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  reason:
                    type: string
                required:
                  - status
                  - reason
  /auth/users/login:
    post:
      operationId: PostAuthUsersLogin
      tags:
        - auth
      requestBody:
        description: POST /auth/users/login Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  minLength: 1
                password:
                  type: string
                  minLength: 4
                  maxLength: 30
              required:
                - email
                - password
      responses:
        "200":
          description: POST /auth/users/login Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      externalId:
                        type: string
                        format: uuid
                      token:
                        type: string
                        minLength: 60
                    required:
                      - externalId
                      - token
                required:
                  - status
                  - data
        "400":
          description: POST /auth/users/login Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /cms:
    get:
      operationId: GetCms
      summary: Retrieves CMS base info.
      tags:
        - content-management-system
      responses:
        "200":
          description: GET /cms Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      appName:
                        type: string
                      title:
                        type: string
                      content:
                        type: string
                    required:
                      - appName
                      - title
                      - content
                required:
                  - status
                  - data
        "400":
          description: GET /cms Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /cms/posts:
    get:
      operationId: GetCmsPosts
      summary: Get all posts
      tags:
        - posts
      responses:
        "200":
          description: GET /cms/posts Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      posts:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                              format: double
                              minimum: -1.7976931348623157e+308
                              maximum: 1.7976931348623157e+308
                            category:
                              type: string
                            content:
                              type: string
                            author:
                              type: string
                            createdAt:
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                            updatedAt:
                              description: YYYY-MM-DDTHH:mm:ss.sssZ
                              type: string
                              format: date-time
                              externalDocs:
                                url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          required:
                            - id
                            - category
                            - content
                            - author
                            - createdAt
                            - updatedAt
                    required:
                      - posts
                required:
                  - status
                  - data
        "400":
          description: GET /cms/posts Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
    post:
      operationId: PostCmsPosts
      summary: Creates a User Post.
      tags:
        - posts
      requestBody:
        description: POST /cms/posts Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                externalId:
                  type: string
                  minLength: 1
                category:
                  type: string
                content:
                  type: string
              required:
                - externalId
                - category
                - content
      security:
        - APIKEY_1: []
          APIKEY_2: []
      responses:
        "201":
          description: POST /cms/posts Positive response 201
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: created
                  data:
                    type: object
                    properties:
                      post:
                        type: object
                        properties:
                          id:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          category:
                            type: string
                          content:
                            type: string
                          authorId:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          createdAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          updatedAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        required:
                          - id
                          - category
                          - content
                          - authorId
                          - createdAt
                          - updatedAt
                    required:
                      - post
                required:
                  - status
                  - data
        "202":
          description: POST /cms/posts Positive response 202
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: created
                  data:
                    type: object
                    properties:
                      post:
                        type: object
                        properties:
                          id:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          category:
                            type: string
                          content:
                            type: string
                          authorId:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          createdAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          updatedAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        required:
                          - id
                          - category
                          - content
                          - authorId
                          - createdAt
                          - updatedAt
                    required:
                      - post
                required:
                  - status
                  - data
        "400":
          description: POST /cms/posts Negative response 400
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  reason:
                    type: string
                required:
                  - status
                  - reason
        "409":
          description: POST /cms/posts Negative response 409
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: exists
                  id:
                    type: integer
                    format: int64
                    minimum: -9007199254740991
                    maximum: 9007199254740991
                required:
                  - status
                  - id
        "500":
          description: POST /cms/posts Negative response 500
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  reason:
                    type: string
                required:
                  - status
                  - reason
    delete:
      operationId: DeleteCmsPosts
      summary: Remove all user posts
      tags:
        - posts
      parameters:
        - name: externalId
          in: query
          required: true
          description: DELETE /cms/posts Parameter
          schema:
            type: string
            minLength: 1
      requestBody:
        description: DELETE /cms/posts Request body
        content:
          application/json:
            schema:
              type: object
              properties: {}
              required: []
      security:
        - APIKEY_3: []
          APIKEY_2: []
      responses:
        "200":
          description: DELETE /cms/posts Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      deletedAt:
                        description: YYYY-MM-DDTHH:mm:ss.sssZ
                        type: string
                        format: date-time
                        externalDocs:
                          url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required:
                      - deletedAt
                required:
                  - status
                  - data
        "400":
          description: DELETE /cms/posts Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /cms/posts/{postId}:
    get:
      operationId: GetCmsPostsPostId
      summary: Retrieves the post.
      tags:
        - posts
      parameters:
        - name: postId
          in: path
          required: true
          description: A numeric string containing the id of the Post
          schema:
            type: string
            pattern: \d+
            description: A numeric string containing the id of the Post
      responses:
        "200":
          description: GET /cms/posts/:postId Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      post:
                        type: object
                        properties:
                          id:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          category:
                            type: string
                          content:
                            type: string
                          author:
                            type: string
                          createdAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          updatedAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        required:
                          - id
                          - category
                          - content
                          - author
                          - createdAt
                          - updatedAt
                    required:
                      - post
                required:
                  - status
                  - data
        "400":
          description: GET /cms/posts/:postId Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
    put:
      operationId: PutCmsPostsPostId
      summary: Update whole Post content
      tags:
        - posts
      parameters:
        - name: postId
          in: path
          required: true
          description: A numeric string containing the id of the Post
          schema:
            type: string
            pattern: \d+
            description: A numeric string containing the id of the Post
      requestBody:
        description: PUT /cms/posts/:postId Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                externalId:
                  type: string
                  minLength: 1
                category:
                  type: string
                content:
                  type: string
              required:
                - externalId
                - category
                - content
      security:
        - APIKEY_1: []
          APIKEY_2: []
      responses:
        "200":
          description: PUT /cms/posts/:postId Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      post:
                        type: object
                        properties:
                          id:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          category:
                            type: string
                          content:
                            type: string
                          authorId:
                            type: number
                            format: double
                            minimum: -1.7976931348623157e+308
                            maximum: 1.7976931348623157e+308
                          createdAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                          updatedAt:
                            description: YYYY-MM-DDTHH:mm:ss.sssZ
                            type: string
                            format: date-time
                            externalDocs:
                              url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                        required:
                          - id
                          - category
                          - content
                          - authorId
                          - createdAt
                          - updatedAt
                    required:
                      - post
                required:
                  - status
                  - data
        "400":
          description: PUT /cms/posts/:postId Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /cms/health:
    get:
      operationId: GetCmsHealth
      summary: Retrieves CMS health.
      tags:
        - content-management-system
      responses:
        "200":
          description: GET /cms/health Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      receivedAt:
                        description: YYYY-MM-DDTHH:mm:ss.sssZ
                        type: string
                        format: date-time
                        externalDocs:
                          url: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString
                    required:
                      - receivedAt
                required:
                  - status
                  - data
        "400":
          description: GET /cms/health Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    APIKEY_1:
      type: apiKey
      in: query
      name: externalId
      x-in-actual: body
      description: externalId MUST be supplied within the request body instead of query
    APIKEY_2:
      type: apiKey
      in: header
      name: authorization
    APIKEY_3:
      type: apiKey
      in: query
      name: externalId
      x-in-alternative: body
      description: externalId CAN also be supplied within the request body
  links: {}
  callbacks: {}
tags: []
servers:
  - url: http://localhost:3000
